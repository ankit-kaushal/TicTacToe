{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","handleClick","value","Board","renderSquare","i","squares","clickAction","this","React","Component","Game","history","state","length","calculateWinner","xIsNext","setState","concat","stepNumber","Array","fill","status","current","winner","possibilities","a","b","c","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAEe,SAASA,EAAOC,GAC3B,OACI,wBAAQC,UAAa,SAASC,QAAWF,EAAMG,YAA/C,SACKH,EAAMI,Q,ICFEC,E,4MACjBC,aAAe,SAACC,GACd,OACE,cAACR,EAAD,CAAQK,MAAS,EAAKJ,MAAMQ,QAAQD,GAAIJ,YAAe,kBAAM,EAAKH,MAAMS,YAAYF,O,uDAMpF,OACE,gCACE,sBAAKN,UAAU,aAAf,UACGS,KAAKJ,aAAa,GAClBI,KAAKJ,aAAa,GAClBI,KAAKJ,aAAa,MAGrB,sBAAKL,UAAU,aAAf,UACGS,KAAKJ,aAAa,GAClBI,KAAKJ,aAAa,GAClBI,KAAKJ,aAAa,MAGrB,sBAAKL,UAAU,aAAf,UACGS,KAAKJ,aAAa,GAClBI,KAAKJ,aAAa,GAClBI,KAAKJ,aAAa,a,GA1BEK,IAAMC,WCApBC,E,kDACjB,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAURG,YAAc,SAACI,GACb,IAAMO,EAAU,EAAKC,MAAMD,QAErBN,EADUM,EAAQA,EAAQE,OAAS,GACjBR,QAETS,EAAgBT,IAElBA,EAAQD,KAIrBC,EAAQD,GAAK,EAAKQ,MAAMG,QAAU,IAAM,IACxC,EAAKC,SAAS,CACZL,QAASA,EAAQM,OAAO,CACtBZ,QAAQA,IAEVU,SAAU,EAAKH,MAAMG,QACrBG,WAAYP,EAAQE,WA1BtB,EAAKD,MAAQ,CACXG,SAAS,EACTG,WAAY,EACZP,QAAS,CACP,CAACN,QAASc,MAAM,GAAGC,KAAK,SANX,E,qDAiCT,IAGJC,EAHG,OAEDC,EADUf,KAAKK,MAAMD,QACHJ,KAAKK,MAAMM,YAE7BK,EAAST,EAAgBQ,EAAQjB,SAOvC,OAJEgB,EADCE,EACQ,YAAcA,EAEd,mBAAqBhB,KAAKK,MAAMG,QAAU,IAAM,KAGzD,sBAAKjB,UAAW,OAAhB,UACE,qBAAKA,UAAY,aAAjB,SACE,cAAC,EAAD,CAAOQ,YAAe,SAACF,GAAD,OAAO,EAAKJ,YAAYI,IAAIC,QAAWiB,EAAQjB,YAGvE,qBAAKP,UAAY,YAAjB,SACE,8BAAMuB,a,GApDgBb,IAAMC,WA2DtC,SAASK,EAAiBT,GAYxB,IAXA,IAAMmB,EAAgB,CACpB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGDpB,EAAI,EAAGA,EAAIoB,EAAcX,OAAQT,IAAK,CAAC,IAAD,cAC1BoB,EAAcpB,GADY,GACrCqB,EADqC,KAClCC,EADkC,KAC/BC,EAD+B,KAE5C,GAAGtB,EAAQoB,IAAMpB,EAAQoB,KAAOpB,EAAQqB,IAAMrB,EAAQqB,KAAOrB,EAAQsB,GACnE,OAAOtB,EAAQoB,GAInB,OAAO,KCvEIG,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.495414c5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Square(props){\r\n    return(\r\n        <button className =  \"square\" onClick = {props.handleClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}","import React from 'react'\r\nimport Square from './Square'\r\n\r\nexport default class Board extends React.Component {\r\n    renderSquare = (i) => {\r\n      return(\r\n        <Square value = {this.props.squares[i]} handleClick = {() => this.props.clickAction(i)}/>\r\n      )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <div>\r\n            <div className=\"border-row\">\r\n              {this.renderSquare(0)}          \r\n              {this.renderSquare(1)}          \r\n              {this.renderSquare(2)}          \r\n            </div>\r\n      \r\n            <div className=\"border-row\">\r\n              {this.renderSquare(3)}          \r\n              {this.renderSquare(4)}          \r\n              {this.renderSquare(5)}      \r\n            </div>\r\n      \r\n            <div className=\"border-row\">\r\n              {this.renderSquare(6)}          \r\n              {this.renderSquare(7)}          \r\n              {this.renderSquare(8)}      \r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport Board from './Board'\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        xIsNext: true,\r\n        stepNumber: 0,\r\n        history: [\r\n          {squares: Array(9).fill(null)}      \r\n        ],\r\n      } \r\n    } \r\n  \r\n    handleClick = (i) => {\r\n      const history = this.state.history\r\n      const current = history[history.length - 1]\r\n      const squares = current.squares\r\n  \r\n      const winner = calculateWinner(squares)\r\n  \r\n      if(winner || squares[i]) {\r\n        return\r\n      }\r\n  \r\n      squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n      this.setState({\r\n        history: history.concat({\r\n          squares:squares\r\n        }),\r\n        xIsNext: !this.state.xIsNext,\r\n        stepNumber: history.length\r\n      })\r\n    }\r\n  \r\n  \r\n    render() {    \r\n      const history = this.state.history\r\n      const current = history[this.state.stepNumber]\r\n      let status\r\n      const winner = calculateWinner(current.squares)\r\n  \r\n      if(winner) {\r\n        status = 'Winner is' + winner\r\n      } else {\r\n        status = 'Next Player is ' + (this.state.xIsNext ? 'X' : 'O')\r\n      }\r\n      return(\r\n        <div className= \"game\">\r\n          <div className = \"game-board\">\r\n            <Board clickAction = {(i) => this.handleClick(i)} squares = {current.squares}/>          \r\n          </div>\r\n  \r\n          <div className = \"game-info\">\r\n            <div>{status}</div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  function calculateWinner (squares) {\r\n    const possibilities = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ]\r\n  \r\n    for(let i = 0; i < possibilities.length; i++) {\r\n      const [a, b, c] = possibilities[i]\r\n      if(squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\r\n        return squares[a]\r\n      }\r\n    }\r\n  \r\n    return null\r\n  }","import React from 'react'\nimport './App.css';\nimport Game from './components/Game'\n\nfunction App() {\n  return (\n    <Game/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}